# Standard library importsimport timeit# Third party importsimport numpy as npimport matplotlib.pyplot as plt# Local application importsfrom data.generation import generate_datafrom vi.cavi import coordinates_ascentfrom config_simple import Params# random seed for testing purposes# np.random.seed(255)# load parametersparams = Params()# number of MC runsMC_runs = 100# results = nested list which stores results for each simulation run such that:# res[iMCrun][0] -> elbo# res[iMCrun][1] -> tau# res[iMCrun][2] -> gamma# res[iMCrun][3] -> phires = [[None for i in range(4)] for j in range(MC_runs)]for i in range(MC_runs):    # generate data    indicator_array, cluster_assignments, cluster_means, data, _ = \        generate_data(params)    params.true_assignment = cluster_assignments    # CAVI    elbo_final, tau, gamma, phi = coordinates_ascent(data, params)    res[i][:] = elbo_final, tau, gamma, phi